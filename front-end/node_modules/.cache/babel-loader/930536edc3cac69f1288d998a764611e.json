{"ast":null,"code":"import _asyncToGenerator from \"/Users/paolopoemape/Desktop/photo-bomb/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'Photo',\n  data: function data() {\n    return {\n      user: '',\n      photo: '',\n      description: '',\n      comments: '',\n      error: ''\n    };\n  },\n  created: function created() {\n    this.getPhoto();\n    this.getComments();\n  },\n  methods: {\n    getPhoto: function getPhoto() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"/api/photos/\" + _this.$route.params.id);\n\n              case 3:\n                response = _context.sent;\n                _this.photo = response.data;\n                _this.description = response.data.description;\n                console.log(response.data);\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                _this.error = _context.t0.response.data.message;\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    upload: function upload() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var r2;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return axios.post('/api/comments/' + _this2.$route.params.id, {\n                  comment: _this2.comment,\n                  user: _this2.$root.$data.user.username\n                });\n\n              case 3:\n                r2 = _context2.sent;\n                console.log(r2);\n                _this2.addItem = r2.data;\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 8]]);\n      }))();\n    },\n    getComments: function getComments() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return axios.get(\"/api/comments/\" + _this3.$route.params.id);\n\n              case 3:\n                response = _context3.sent;\n                _this3.comments = response.data;\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                _this3.error = _context3.t0.response.data.message;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 7]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;AAeA;AAEA;AACAA,eADA;AAGAC,MAHA,kBAGA;AACA;AACAC,cADA;AAEAC,eAFA;AAGAC,qBAHA;AAIAC,kBAJA;AAKAC;AALA;AAOA,GAXA;AAYAC,SAZA,qBAYA;AACA;AACA;AACA,GAfA;AAgBAC;AACAC,YADA,sBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,kDAFA;;AAAA;AAEAC,wBAFA;AAGA;AACA;AACAC;AALA;AAAA;;AAAA;AAAA;AAAA;AAOA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KAVA;AAYAC,UAZA,oBAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAH;AACAI,yCADA;AAEAZ;AAFA,kBAFA;;AAAA;AAEAa,kBAFA;AAMAH;AACA;AAPA;AAAA;;AAAA;AAAA;AAAA;AASAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,KAvBA;AA0BAI,eA1BA,yBA0BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAN,qDAFA;;AAAA;AAEAC,wBAFA;AAGA;AAHA;AAAA;;AAAA;AAAA;AAAA;AAKA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAjCA;AAhBA","names":["name","data","user","photo","description","comments","error","created","methods","getPhoto","axios","response","console","upload","comment","r2","getComments"],"sourceRoot":"src/views","sources":["Photo.vue"],"sourcesContent":["<template>\n<div class=\"pc\" style=\"text-align:center\">\n    <img style=\"width:40%; padding-top: 150px\" :src=\"photo.path\" />\n    <p> {{description}} </p>\n    <textarea v-model=\"comment\" placeholder=\"Comment\"/>\n     <button @click=\"upload\">Post</button>\n     <div class=\"image\" v-for=\"c in comments\" v-bind:key=\"c._id\">\n          <p >{{c.comment}} - {{user.username}}</p>\n       </div>\n\n\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'Photo',\n\n  data() {\n  return {\n    user: '',\n    photo: '',\n    description:'',\n    comments: '',\n    error: '',\n   }\n },\n created() {\n   this.getPhoto();\n   this.getComments();\n },\n  methods: {\n    async getPhoto() {\n      try {\n        let response = await axios.get(\"/api/photos/\"+ this.$route.params.id);\n        this.photo = response.data;\n        this.description= response.data.description;\n        console.log(response.data)\n        } catch (error) {\n          this.error = error.response.data.message;\n        }\n     },\n\n     async upload() {\n      try {\n       let r2 = await axios.post('/api/comments/' + this.$route.params.id, {\n         comment: this.comment,\n         user: this.$root.$data.user.username,\n       });\n       console.log(r2);\n       this.addItem = r2.data;\n     } catch (error) {\n       console.log(error);\n     }\n   },\n\n\n   async getComments() {\n     try {\n       let response = await axios.get(\"/api/comments/\"+ this.$route.params.id);\n       this.comments = response.data;\n       } catch (error) {\n         this.error = error.response.data.message;\n       }\n    },\n  }\n}\n</script>\n\n<style>\n\n.pc img {\n  width: 50%;\n}\n<style>\n"]},"metadata":{},"sourceType":"module"}