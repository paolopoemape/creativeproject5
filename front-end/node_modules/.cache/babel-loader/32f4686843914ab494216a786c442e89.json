{"ast":null,"code":"import _asyncToGenerator from \"/Users/paolopoemape/Desktop/photo-bomb/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'Uploader',\n  props: {\n    show: Boolean\n  },\n  data: function data() {\n    return {\n      title: '',\n      description: '',\n      url: '',\n      file: null,\n      error: ''\n    };\n  },\n  methods: {\n    fileChanged: function fileChanged(event) {\n      this.file = event.target.files[0];\n      this.url = URL.createObjectURL(this.file);\n    },\n    close: function close() {\n      this.$emit('close');\n    },\n    chooseImage: function chooseImage() {\n      this.$refs.fileInput.click();\n    },\n    upload: function upload() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var formData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                formData = new FormData();\n                formData.append('photo', _this.file, _this.file.name);\n                formData.append('title', _this.title);\n                formData.append('description', _this.description);\n                _context.next = 7;\n                return axios.post(\"/api/photos\", formData);\n\n              case 7:\n                _this.file = null;\n                _this.url = \"\";\n                _this.title = \"\";\n                _this.description = \"\";\n\n                _this.$emit('uploadFinished');\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](0);\n                _this.error = \"Error: \" + _context.t0.response.data.message;\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 14]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACAA,kBADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,eADA;AAEAC,qBAFA;AAGAC,aAHA;AAIAC,gBAJA;AAKAC;AALA;AAOA,GAbA;AAeAC;AACAC,eADA,uBACAC,KADA,EACA;AACA;AACA;AACA,KAJA;AAKAC,SALA,mBAKA;AACA;AACA,KAPA;AAQAC,eARA,yBAQA;AACA;AACA,KAVA;AAYAC,UAZA,oBAYA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,wBAFA,GAEA,cAFA;AAGAA;AACAA;AACAA;AALA;AAAA,uBAMAC,mCANA;;AAAA;AAOA;AACA;AACA;AACA;;AACA;;AAXA;AAAA;;AAAA;AAAA;AAAA;AAaA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AA3BA;AAfA","names":["name","props","show","data","title","description","url","file","error","methods","fileChanged","event","close","chooseImage","upload","formData","axios"],"sourceRoot":"src/components","sources":["Uploader.vue"],"sourcesContent":["\n<template>\n<transition v-if=\"show\" name=\"modal\">\n  <div class=\"modal-mask\">\n    <div class=\"modal-container\">\n      <form class=\"pure-form\" @submit.prevent=\"upload\">\n        <legend>Upload a picture</legend>\n        <fieldset>\n          <input v-model=\"title\" placeholder=\"Title\">\n        </fieldset>\n        <fieldset>\n          <textarea v-model=\"description\" placeholder=\"Description\"></textarea>\n        </fieldset>\n        <fieldset>\n          <div class=\"imageInput\" @click=\"chooseImage\">\n            <img v-if=\"url\" :src=\"url\" />\n            <div v-if=\"!url\" class=\"placeholder\">\n              Choose an Image\n            </div>\n            <input class=\"fileInput\" ref=\"fileInput\" type=\"file\" @input=\"fileChanged\">\n          </div>\n          <p v-if=\"error\" class=\"error\">{{error}}</p>\n        </fieldset>\n        <fieldset class=\"buttons\">\n          <button type=\"button\" @click=\"close\" class=\"pure-button\">Close</button>\n          <button type=\"submit\" class=\"pure-button pure-button-primary right\">Upload</button>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n</transition>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Uploader',\n  props: {\n    show: Boolean,\n  },\n  data() {\n    return {\n      title: '',\n      description: '',\n      url: '',\n      file: null,\n      error: '',\n    };\n  },\n\nmethods: {\n  fileChanged(event) {\n    this.file = event.target.files[0];\n    this.url = URL.createObjectURL(this.file);\n  },\n  close() {\n    this.$emit('close');\n  },\n  chooseImage() {\n      this.$refs.fileInput.click()\n    },\n \n      async upload() {\n      try {\n        const formData = new FormData();\n        formData.append('photo', this.file, this.file.name);\n        formData.append('title', this.title);\n        formData.append('description', this.description);\n        await axios.post(\"/api/photos\", formData);\n        this.file = null;\n        this.url = \"\";\n        this.title = \"\";\n        this.description = \"\";\n        this.$emit('uploadFinished');\n      } catch (error) {\n        this.error = \"Error: \" + error.response.data.message;\n      }\n    }\n\n  }\n\n}\n</script>\n\n\n\n<style scoped>\n/* Modals */\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, .3);\n  transition: opacity 0.5s ease;\n  display: flex;\n  transition: background 0.2s ease-in-out, height 1s ease-in-out;\n  transition: height 0.2s ease-in-out, width 0.2s ease-in-out;\n  justify-content: center;\n  transition-timing-function: cubic-bezier(0.64, 0.57, 0.67, 1.53);\n}\n\n.modal-container {\n  width: 50%;\n  height: max-content;\n  margin-top: 80px;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, .33);\n  transition: all 0.5s ease;\n}\n\n/*\n* The following styles are auto-applied to elements with\n* transition=\"modal\" when their visibility is toggled\n* by Vue.js.\n*\n* You can easily play with the modal transition by editing\n* these styles.\n*/\n.modal-enter {\n  opacity: 0;\n}\n\n.modal-leave-active {\n  opacity: 0;\n}\n\n.modal-enter .modal-container,\n.modal-leave-active .modal-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n\n/* Form */\n\nform {\n  font-size: 11pt;\n}\n\ninput {\n  width: 100%;\n}\n\ntextarea {\n  width: 100%;\n  height: 100px;\n}\n\n.placeholder {\n  background: #F0F0F0;\n  width: 200px;\n  height: 125px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #333;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.placeholder:hover {\n  background: #E0E0E0;\n}\n\n.fileInput {\n  display: none;\n}\n\nimg {\n  width: 200px;\n}\n\n.buttons {\n  display: flex;\n  justify-content: space-between;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}